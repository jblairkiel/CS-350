import java.awt.*;
import java.awt.geom.AffineTransform;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.JPanel;

public class Shapes extends JPanel{

	private int choice;
	private int numAcross;
	private int numDown;
	private int size;
	int[] possibleRotations = {90, 180};

	public Shapes( int tileChoice, int tileSize)
	{
		//using the same variables
		choice = tileChoice;
		size = tileSize;
	}
	
	public void paintComponent(Graphics g)
	{
		super.paintComponent( g );
	      g.setColor(Color.red);
	      numAcross = getWidth() / size;
	      numDown = getHeight() / size;
	      for ( int i = 0; i < (size*numDown) + 2; i += size )
	      {
	    	  for ( int j = 0; j < (size*numAcross) + 2; j += size)
	    	  {
	    		  Random random = new Random();
	    		  int rotationStartNum1 = random.nextInt(possibleRotations.length);
	    		  int rotationStart1 = 0;
	    		  int rotationStart2 = 0;
	    		  int rotationEnd1 = 0;
	    		  int rotationEnd2 = 0;
	    		  int skew1 = 0;
	    		  int skew2 = 0;

	    		  rotationStart1 = possibleRotations[rotationStartNum1];
	    		  if(rotationStart1 == 90){
	    			  rotationEnd1 = 90;
	    			  rotationStart2 = 270;
	    			  rotationEnd2 = 90;
	    			  skew1 = -size;
	    			  skew2 = size;

	    		  }
	    		  else if(rotationStart1 == 180){
	    			  rotationEnd1 = 90;
	    			  rotationStart2 = 360;
	    			  rotationEnd2 = 90;
	    			  skew1 = size;
	    			  skew2 = -size;
	    		  };
	    		  
	    		  
	    		  
	         // pick the shape based on the user's choice
	    		  switch ( choice )
                  {
                  	case 1: //draw two 90 degree arcs
                  		//(x, y, width, height, startAngle, Angle) 
                  		//g.drawArc(j, i, size, size, rotationStart1, rotationEnd1 );
                  		//g.drawArc(j, i, size, size, rotationStart2, rotationEnd2 );
                  		g.drawArc(j + skew1, i, size, size, rotationStart1, rotationEnd1);
                  		g.drawArc(j , i + skew2, size, size, rotationStart2, rotationEnd2);
                  		break;
                    default:
                    	g.drawLine( 10 + i * 10, 60 + i * 20, 
                                60 + i * 20, 10 + i * 10 );
                        break;
                  }
	    	  } // end switch
	      } // end for
	      
	      // added by Zhang
	      int x=20;
	      int y=getHeight()-20;
	      if (choice==1) {
	    	  g.drawString("Arcs drawn", x, y);
	      }
	      else {
	    	  g.drawString("10 lines drawn", x, y);    	 
	      }
	      choice=(choice+1)%5;
	      // end of addition
	}
}
